// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getOwner","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[{"name":"_LEI","type":"string"},{"name":"_OfficialEntityName","type":"string"},{"name":"_Address","type":"string"},{"name":"_Region","type":"string"},{"name":"_OfficialRegistry","type":"string"},{"name":"_RegRef","type":"string"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_owner","type":"address"}],"name":"LogOwner","type":"event"}],
    binary: "606060405260405161045638038061045683398101604052805160805160a05160c05160e0516101005194860195938401949284019391820192908201910160008054600160a060020a031916331790558560016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100cc57805160ff19168380011785555b506100fc9291505b8082111561015557600081556001016100a3565b505050505050505060a9806103ad6000396000f35b8280016001018555821561009b579182015b8281111561009b5782518260005055916020019190600101906100de565b50508460026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015957805160ff19168380011785555b506101899291506100a3565b5090565b82800160010185558215610149579182015b8281111561014957825182600050559160200191906001019061016b565b50508360036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e257805160ff19168380011785555b506102129291506100a3565b828001600101855582156101d6579182015b828111156101d65782518260005055916020019190600101906101f4565b50508260046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026b57805160ff19168380011785555b5061029b9291506100a3565b8280016001018555821561025f579182015b8281111561025f57825182600050559160200191906001019061027d565b50508160066000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102f457805160ff19168380011785555b506103249291506100a3565b828001600101855582156102e8579182015b828111156102e8578251826000505591602001919060010190610306565b50508060076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037d57805160ff19168380011785555b506100b79291506100a3565b82800160010185558215610371579182015b8281111561037157825182600050559160200191906001019061038f56606060405260e060020a600035046341c0e1b581146024578063893d20e814603f575b005b602260005433600160a060020a03908116911614609b576002565b609460008054600160a060020a031660609081527f2e6a5233203ef57f0bc3f27a09ec8db49caa33bdf9dcac109a226904362ca0d890602090a1600060009054906101000a9004600160a060020a0316905090565b5060206060f35b600054600160a060020a0316ff",
    unlinked_binary: "606060405260405161045638038061045683398101604052805160805160a05160c05160e0516101005194860195938401949284019391820192908201910160008054600160a060020a031916331790558560016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100cc57805160ff19168380011785555b506100fc9291505b8082111561015557600081556001016100a3565b505050505050505060a9806103ad6000396000f35b8280016001018555821561009b579182015b8281111561009b5782518260005055916020019190600101906100de565b50508460026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015957805160ff19168380011785555b506101899291506100a3565b5090565b82800160010185558215610149579182015b8281111561014957825182600050559160200191906001019061016b565b50508360036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e257805160ff19168380011785555b506102129291506100a3565b828001600101855582156101d6579182015b828111156101d65782518260005055916020019190600101906101f4565b50508260046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026b57805160ff19168380011785555b5061029b9291506100a3565b8280016001018555821561025f579182015b8281111561025f57825182600050559160200191906001019061027d565b50508160066000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102f457805160ff19168380011785555b506103249291506100a3565b828001600101855582156102e8579182015b828111156102e8578251826000505591602001919060010190610306565b50508060076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037d57805160ff19168380011785555b506100b79291506100a3565b82800160010185558215610371579182015b8281111561037157825182600050559160200191906001019061038f56606060405260e060020a600035046341c0e1b581146024578063893d20e814603f575b005b602260005433600160a060020a03908116911614609b576002565b609460008054600160a060020a031660609081527f2e6a5233203ef57f0bc3f27a09ec8db49caa33bdf9dcac109a226904362ca0d890602090a1600060009054906101000a9004600160a060020a0316905090565b5060206060f35b600054600160a060020a0316ff",
    address: "0xfee699849ac968624c3f66ac573601d2e1becc7b",
    generated_with: "2.0.6",
    contract_name: "Company"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Company = Contract;
  }

})();
