// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getOwner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"changeOwner","outputs":[],"type":"function"},{"inputs":[{"name":"_LEI","type":"string"},{"name":"_OfficialEntityName","type":"string"},{"name":"_Address","type":"string"},{"name":"_Region","type":"string"},{"name":"_OfficialRegistry","type":"string"},{"name":"_RegRef","type":"string"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_owner","type":"address"}],"name":"LogOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"LEI","type":"string"}],"name":"LogLei","type":"event"}],
    binary: "606060405260405161059738038061059783398101604052805160805160a05160c05160e0516101005194860195938401949284019391820192908201910160008054600160a060020a031916331790558560016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100cd57805160ff19168380011785555b506100fd9291505b8082111561015657600081556001016100a3565b50505050505050506101e9806103ae6000396000f35b8280016001018555821561009b579182015b8281111561009b5782518260005055916020019190600101906100df565b50508460026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015a57805160ff19168380011785555b5061018a9291506100a3565b5090565b8280016001018555821561014a579182015b8281111561014a57825182600050559160200191906001019061016c565b50508360036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e357805160ff19168380011785555b506102139291506100a3565b828001600101855582156101d7579182015b828111156101d75782518260005055916020019190600101906101f5565b50508260046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026c57805160ff19168380011785555b5061029c9291506100a3565b82800160010185558215610260579182015b8281111561026057825182600050559160200191906001019061027e565b50508160066000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102f557805160ff19168380011785555b506103259291506100a3565b828001600101855582156102e9579182015b828111156102e9578251826000505591602001919060010190610307565b50508060076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037e57805160ff19168380011785555b506100b79291506100a3565b82800160010185558215610372579182015b8281111561037257825182600050559160200191906001019061039056606060405260e060020a600035046341c0e1b5811461003c578063893d20e81461005b5780638da5cb5b14610104578063a6f9dae114610116575b005b61003a60005433600160a060020a03908116911614156101b957610002565b61013860008054600160a060020a031660609081527f2e6a5233203ef57f0bc3f27a09ec8db49caa33bdf9dcac109a226904362ca0d890602090a1602060609081526001805460026000198284161561010002019091160460808190527fd4b016a6d4233422549948ee3850778dba1592d0d93094213a42ce9e55c5032c9290819060a090849080156101905780601f1061014a57610100808354040283529160200191610190565b610138600054600160a060020a031681565b61003a60043560005433600160a060020a03908116911614156101c757610002565b60408051918252519081900360200190f35b9087528101907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6905b81548152906001019060200180831161017357829003601f168201915b50509250505060405180910390a1600060009054906101000a9004600160a060020a0316905090565b600054600160a060020a0316ff5b6000805473ffffffffffffffffffffffffffffffffffffffff1916821790555056",
    unlinked_binary: "606060405260405161059738038061059783398101604052805160805160a05160c05160e0516101005194860195938401949284019391820192908201910160008054600160a060020a031916331790558560016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100cd57805160ff19168380011785555b506100fd9291505b8082111561015657600081556001016100a3565b50505050505050506101e9806103ae6000396000f35b8280016001018555821561009b579182015b8281111561009b5782518260005055916020019190600101906100df565b50508460026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015a57805160ff19168380011785555b5061018a9291506100a3565b5090565b8280016001018555821561014a579182015b8281111561014a57825182600050559160200191906001019061016c565b50508360036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e357805160ff19168380011785555b506102139291506100a3565b828001600101855582156101d7579182015b828111156101d75782518260005055916020019190600101906101f5565b50508260046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026c57805160ff19168380011785555b5061029c9291506100a3565b82800160010185558215610260579182015b8281111561026057825182600050559160200191906001019061027e565b50508160066000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102f557805160ff19168380011785555b506103259291506100a3565b828001600101855582156102e9579182015b828111156102e9578251826000505591602001919060010190610307565b50508060076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037e57805160ff19168380011785555b506100b79291506100a3565b82800160010185558215610372579182015b8281111561037257825182600050559160200191906001019061039056606060405260e060020a600035046341c0e1b5811461003c578063893d20e81461005b5780638da5cb5b14610104578063a6f9dae114610116575b005b61003a60005433600160a060020a03908116911614156101b957610002565b61013860008054600160a060020a031660609081527f2e6a5233203ef57f0bc3f27a09ec8db49caa33bdf9dcac109a226904362ca0d890602090a1602060609081526001805460026000198284161561010002019091160460808190527fd4b016a6d4233422549948ee3850778dba1592d0d93094213a42ce9e55c5032c9290819060a090849080156101905780601f1061014a57610100808354040283529160200191610190565b610138600054600160a060020a031681565b61003a60043560005433600160a060020a03908116911614156101c757610002565b60408051918252519081900360200190f35b9087528101907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6905b81548152906001019060200180831161017357829003601f168201915b50509250505060405180910390a1600060009054906101000a9004600160a060020a0316905090565b600054600160a060020a0316ff5b6000805473ffffffffffffffffffffffffffffffffffffffff1916821790555056",
    address: "0x9a27c189aa3e2560ba6f041d826dbf8ff3eddf68",
    generated_with: "2.0.6",
    contract_name: "Company"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Company error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Company = Contract;
  }

})();
